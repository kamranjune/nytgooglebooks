{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/ContainerBookSearch/index.js","pages/Search.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","API","googleBooks","queryParams","axios","get","saveBook","bookData","post","getBooks","getBook","id","deleteBook","delete","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","ViewBtn","props","Object","assign","role","tabIndex","SaveBtn","Input","FormBtn","float","marginBottom","Search","state","books","book","title","author","description","images","image","link","then","res","catch","err","console","log","viewBook","window","open","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","mappedResults","data","items","item","volumeInfo","authors","imageLinks","thumbnail","previewLink","_this2","this","components_Jumbotron","onChange","placeholder","disabled","onClick","length","key","src","Component","Saved","match","params","_this3","NoMatch","aria-label","Nav","href","Link","to","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.71904901.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  googleBooks: function(queryParams) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + queryParams + \"&key=AIzaSyBDvpkQYbV2wXF6KBZ2XnodIDDpb-Q9UZ4\");\n  },\n    // Saves a book to the database\n    saveBook: function(bookData) {\n      return axios.post(\"/api/books\", bookData);\n    },\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  }\n\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n     \n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nexport function ViewBtn(props) {\n  return (\n    <form>\n      <button className=\"view-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      View\n    </button>\n    </form>\n  );\n}\n\nexport function SaveBtn(props) {\n  return (\n    <button className=\"save-btn\" {...props} role=\"submit\" tabIndex=\"0\">\n      Save\n    </button>\n  );\n}\n\n\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem, ViewBtn, SaveBtn } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/ContainerBookSearch\";\n\nclass Search extends Component {\n// constructor(props)\n// {\n//   //super(props);\n//   //in constructor\n//   //bind methods\n//   ///this.handleSubmit = this.handleSubmit.bind(this)\n\n// }\n \n\n\n  state = {\n    books : {}\n  };\n\n  // componentDidMount() {\n  //   this.loadBooks();\n  // }\n\n  saveBook = (book) => {\n    {/* //? NO EVENT.PREVENTDEFAULT ON AN ONCLICK SUBMIT? ONLY ON A BUTTON?  API CALL? */}\n    // event.preventDefault();\n\n\n\n    API.saveBook({\n      book: book,\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      description: book.description,\n      images:  book.image,\n      link: book.link\n    })\n      .then( (res) => { })\n      //.then(res.status(200)) does not work\n      //.then(res.json({})) does not work\n      //.then(res.status(200).end) does not work\n      .catch(err => console.log(err));\n  \n};\n\n\n\n  viewBook = (link) => {\n    window.open(link, \"_blank\");\n\n  }\n\n  // loadBooks = () => {\n  //   API.getBooks()\n  //   .then(res =>\n  //     this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n  //   )\n  //     .catch(err => console.log(err));\n  //     console.log({books});\n  // };\n\n  // deleteBook = id => {\n  //   API.deleteBook(id)\n  //     .then(res => this.loadBooks())\n  //     .catch(err => console.log(err));\n  // };\n\n  // filterItems = (items) => {\n  //   items.forEach( {\n  //   this.state.items.volumeInfo.title,\n  //   this.state.items.volumeInfo.authors,\n  //   this.state.items.volumeInfo.description,\n  //   this.state.items.volumeInfo.imageLinks.thumbnail,\n  //   this.state.items.selfLink\n\n  //   in Results Array of Objects\n\n  //   Put Array of objects into State.\n\n  // }\n\n\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.title) {\n      API.googleBooks(this.state.title,\n     )\n        .then( (res) => { \n            console.log('res from api ', res);\n            const mappedResults = res.data.items.map(item=>{\n                let book = {};\n                book.id =  item.id;\n                book.title = item.volumeInfo.title;   //book.title is a string\n                book.authors = item.volumeInfo.authors;  ///book.authors is an array\n                book.description = item.volumeInfo.description;\n                book.image = item.volumeInfo.imageLinks.thumbnail;\n                book.link = item.volumeInfo.previewLink;\n                return book;\n            });\n            //now mappedResults has array of objects with data you want\n            this.setState({books:mappedResults});\n          //this.setState({books : res.data.items.filter(filterItems(res.data.items))} ))\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>(React) Google Books Search</h1>\n              <h2>Search for and Save Books of Interest</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-6\">\n            {/* <ContainerBookSearch> */}\n              <h3>Book Search</h3>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Book Title (required)\"\n              />\n             \n              <FormBtn\n                disabled={!(this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Search\n              </FormBtn>\n            </form>\n            {/* </ContainerBookSearch> */}\n\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-6\">\n            {/* <ContainerResults> */}\n              <h3>Results</h3>      \n            {this.state.books.length ? (\n              <List>\n                 \n                {this.state.books.map(book => (\n                  <ListItem key={book.id}>\n                        {/* //? NO EVENT.PREVENTDEFAULT ON AN ONCLICK SUBMIT? ONLY ON A BUTTON?  API CALL? */}\n                   <SaveBtn disabled={!(book.id)} onClick={() => this.saveBook(book)} />\n                   <ViewBtn disabled={!(book.id)} onClick={() => this.viewBook(book.link)} /> \n\n                    Title: {book.title} <br/>\n                    Author:  {book.authors}<br/>\n                    Description: {book.description}<br/>\n                    <img src={book.image}/><br/>\n                    \n                    {/* <ViewBtn disabled={!(book.id)} formaction={book.link}/> */}\n\n\n\n                {/* {this.state.books.filter(items => (\n                  <ListItem title={items.volumeInfo.title}>\n                  < */}      \n{/* Major Question 1:  how to display?  \n\n  1.  display to Results directly from API?  (side question: where to format res.data.data object for desired display?)\n  2.  take from API, \n        put into state, \n            display results from State?\n  3.  take from API, \n        put into state, \n            put into DB from state, \n                display results from DB?\n  4.  take from API, \n          put into DB,\n            display results from DB?\n\n  5.  take from API, \n            put into DB, \n                put into books.json, \n                    put into state, \n                        display results from state\n\nMajor Question 2:  Where to Route API vs. Storage?\n    1.  GoogleBooks API:  (React) src -->  components -->  ../utils --> API.js --> (../Node/Express) routes --> api --> books.js--> http://googlebooks\n    2.  MongoDB:  (React) src -->  components -->  ../utils --> API.js --> (../Node/Express) routes --> api --> books.js  --> controllers --> booksController.js --> mongodb://localhost/googlebooks\n[[react API ServerRoutes DB  (Return)  DB  serverroutes reactapi]] */}\n              \n                                      </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n            \n            {/* </ContainerResults> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem, ViewBtn, SaveBtn } from \"../components/List\";\n\n\nclass Saved extends Component {\n  state = {\n    book: {}\n  };\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    API.getBook(this.props.match.params.id)\n      .then(res => this.setState({ book: res.data }))\n      .catch(err => console.log(err));\n  }\n\n    render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>(React) Google Books Search</h1>\n              <h2>Search for and Save Books of Interest</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n       \n        <Row>\n          <Col size=\"md-6\">\n            {/* <ContainerResults> */}\n              <h3>Results</h3>      \n            {this.state.books.length ? (\n              <List>\n                 \n                {this.state.books.map(book => (\n                  <ListItem key={book.id}>\n                        {/* //? NO EVENT.PREVENTDEFAULT ON AN ONCLICK SUBMIT? ONLY ON A BUTTON?  API CALL? */}\n                   <SaveBtn disabled={!(book.id)} onClick={() => this.saveBook(book)} />\n                   <ViewBtn disabled={!(book.id)} onClick={() => this.viewBook(book.link)} /> \n\n                    Title: {book.title} <br/>\n                    Author:  {book.authors}<br/>\n                    Description: {book.description}<br/>\n                    <img src={book.image}/><br/>\n                    \n                    {/* <ViewBtn disabled={!(book.id)} formaction={book.link}/> */}\n\n\n\n                {/* {this.state.books.filter(items => (\n                  <ListItem title={items.volumeInfo.title}>\n                  < */}      \n{/* Major Question 1:  how to display?  \n\n  1.  display to Results directly from API?  (side question: where to format res.data.data object for desired display?)\n  2.  take from API, \n        put into state, \n            display results from State?\n  3.  take from API, \n        put into state, \n            put into DB from state, \n                display results from DB?\n  4.  take from API, \n          put into DB,\n            display results from DB?\n\n  5.  take from API, \n            put into DB, \n                put into books.json, \n                    put into state, \n                        display results from state\n\nMajor Question 2:  Where to Route API vs. Storage?\n    1.  GoogleBooks API:  (React) src -->  components -->  ../utils --> API.js --> (../Node/Express) routes --> api --> books.js--> http://googlebooks\n    2.  MongoDB:  (React) src -->  components -->  ../utils --> API.js --> (../Node/Express) routes --> api --> books.js  --> controllers --> booksController.js --> mongodb://localhost/googlebooks\n[[react API ServerRoutes DB  (Return)  DB  serverroutes reactapi]] */}\n              \n                                      </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n            \n            {/* </ContainerResults> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">Google Books</a>\n      <Link to={\"Search.js\"}>Search</Link>\n      <Link to={\"Saved.js\"}>Saved</Link>\n      <a className=\"navbar-brand\" href=\"/\">Search</a>\n      <a className=\"navbar-brand\" href=\"/\">Saved</a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}